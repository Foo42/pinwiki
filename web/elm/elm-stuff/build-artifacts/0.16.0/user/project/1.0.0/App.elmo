Elm.App = Elm.App || {};
Elm.App.make = function (_elm) {
   "use strict";
   _elm.App = _elm.App || {};
   if (_elm.App.values) return _elm.App.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var toPxString = function (pos) {
      return A2($Basics._op["++"],$Basics.toString(pos),"px");
   };
   var updatePlaceholderDefinition = F2(function (maybe,
   newDefinition) {
      var _p0 = maybe;
      if (_p0.ctor === "Nothing") {
            return $Maybe.Nothing;
         } else {
            return $Maybe.Just(_U.update(_p0._0,
            {definition: newDefinition}));
         }
   });
   var itemBeingEdited = function (items) {
      return $List.head(A2($List.filter,
      function (_) {
         return _.isEditing;
      },
      items));
   };
   var definitionChanged = F2(function (newDefinition,item) {
      var _p1 = item.isEditing;
      if (_p1 === true) {
            return _U.update(item,{definition: newDefinition});
         } else {
            return item;
         }
   });
   var BeginEdit = function (a) {
      return {ctor: "BeginEdit",_0: a};
   };
   var DefinitionAccepted = function (a) {
      return {ctor: "DefinitionAccepted",_0: a};
   };
   var inputView = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "width"
                                               ,_1: "100%"}
                                              ,{ctor: "_Tuple2",_0: "position",_1: "fixed"}
                                              ,{ctor: "_Tuple2",_0: "bottom",_1: "0"}]))]),
      _U.list([A2($Html.input,
      _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "width"
                                               ,_1: "100%"}]))
              ,$Html$Attributes.placeholder("type...")
              ,$Html$Attributes.autofocus(true)
              ,$Html$Attributes.value(A2($Maybe.withDefault,
              "hwlloo",
              A2($Maybe.andThen,
              itemBeingEdited(model.items),
              function (_p2) {
                 return $Maybe.Just(function (_) {
                    return _.definition;
                 }(_p2));
              })))
              ,A3($Html$Events.on,
              "change",
              $Html$Events.targetValue,
              function (_p3) {
                 return A2($Signal.message,address,DefinitionAccepted(_p3));
              })]),
      _U.list([]))]));
   });
   var ShowPlaceholder = function (a) {
      return {ctor: "ShowPlaceholder",_0: a};
   };
   var NoOp = {ctor: "NoOp"};
   var itemView = F2(function (address,item) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("placeholder item")
              ,$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "position"
                                               ,_1: "absolute"}
                                              ,{ctor: "_Tuple2",_0: "background-color",_1: "whitesmoke"}
                                              ,{ctor: "_Tuple2",_0: "top",_1: toPxString(item.position.y)}
                                              ,{ctor: "_Tuple2",_0: "left",_1: toPxString(item.position.x)}]))
              ,A4($Html$Events.onWithOptions,
              "click",
              {stopPropagation: true,preventDefault: true},
              $Json$Decode.value,
              function (_p4) {
                 return A2($Signal.message,address,NoOp);
              })
              ,A2($Html$Events.onDoubleClick,address,BeginEdit(item.uid))]),
      _U.list([$Html.text(item.definition)]));
   });
   var placeholderView = F2(function (address,maybe) {
      var _p5 = maybe;
      if (_p5.ctor === "Just") {
            return A2(itemView,address,_p5._0);
         } else {
            return $Html.text("click");
         }
   });
   var actions = $Signal.mailbox(NoOp);
   var emptyModel = {items: _U.list([])
                    ,nextuid: 1
                    ,placeholder: $Maybe.Nothing
                    ,bottomRight: {x: 1000,y: 1000}};
   var initialModel = emptyModel;
   var Position = F2(function (a,b) {    return {x: a,y: b};});
   var eventPos = A3($Json$Decode.object2,
   Position,
   A2($Json$Decode._op[":="],"clientX",$Json$Decode.$int),
   A2($Json$Decode._op[":="],"clientY",$Json$Decode.$int));
   var boardView = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("board")
              ,$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "position"
                                               ,_1: "relative"}
                                              ,{ctor: "_Tuple2"
                                               ,_0: "width"
                                               ,_1: A2($Basics._op["++"],
                                               $Basics.toString(model.bottomRight.x),
                                               "px")}
                                              ,{ctor: "_Tuple2"
                                               ,_0: "height"
                                               ,_1: A2($Basics._op["++"],
                                               $Basics.toString(model.bottomRight.y),
                                               "px")}]))
              ,A4($Html$Events.onWithOptions,
              "click",
              {stopPropagation: true,preventDefault: true},
              eventPos,
              function (_p6) {
                 return A2($Signal.message,address,ShowPlaceholder(_p6));
              })]),
      A2($Basics._op["++"],
      A2($List.map,itemView(address),model.items),
      _U.list([A2(placeholderView,address,model.placeholder)])));
   });
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2(boardView,address,model)
              ,A2(inputView,address,model)]));
   });
   var Item = F4(function (a,b,c,d) {
      return {definition: a,position: b,uid: c,isEditing: d};
   });
   var update = F2(function (action,model) {
      var _p7 = A2($Debug.log,"action:",action);
      switch (_p7.ctor)
      {case "NoOp": return model;
         case "BeginEdit": var updateEditing = function (item) {
              return _U.update(item,{isEditing: _U.eq(item.uid,_p7._0)});
           };
           return _U.update(model,
           {items: A2($List.map,updateEditing,model.items)
           ,placeholder: $Maybe.Nothing});
         case "ShowPlaceholder": return _U.update(model,
           {placeholder: $Maybe.Just(A4(Item,
           "placeholder",
           _p7._0,
           0,
           false))});
         default: var _p9 = _p7._0;
           var _p8 = model.placeholder;
           if (_p8.ctor === "Nothing") {
                 return _U.update(model,
                 {items: A2($List.map,definitionChanged(_p9),model.items)});
              } else {
                 var item = A4(Item,_p9,_p8._0.position,model.nextuid,false);
                 return _U.update(model,
                 {placeholder: $Maybe.Nothing
                 ,items: A2($Basics._op["++"],model.items,_U.list([item]))
                 ,nextuid: model.nextuid + 1});
              }}
   });
   var model = A3($Signal.foldp,
   update,
   initialModel,
   A2($Signal.map,$Debug.watch("Actions"),actions.signal));
   var main = A2($Signal.map,view(actions.address),model);
   var Model = F4(function (a,b,c,d) {
      return {items: a,nextuid: b,bottomRight: c,placeholder: d};
   });
   return _elm.App.values = {_op: _op
                            ,Model: Model
                            ,Item: Item
                            ,Position: Position
                            ,initialModel: initialModel
                            ,emptyModel: emptyModel
                            ,NoOp: NoOp
                            ,ShowPlaceholder: ShowPlaceholder
                            ,DefinitionAccepted: DefinitionAccepted
                            ,BeginEdit: BeginEdit
                            ,update: update
                            ,definitionChanged: definitionChanged
                            ,itemBeingEdited: itemBeingEdited
                            ,updatePlaceholderDefinition: updatePlaceholderDefinition
                            ,view: view
                            ,inputView: inputView
                            ,boardView: boardView
                            ,itemView: itemView
                            ,placeholderView: placeholderView
                            ,toPxString: toPxString
                            ,main: main
                            ,model: model
                            ,actions: actions
                            ,eventPos: eventPos};
};